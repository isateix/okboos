datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id        Int      @id @default(autoincrement())
  name      String
  email     String   @unique
  password  String
  createdAt DateTime @default(now())
  orders    Order[]
  addresses Address[]
  isAdmin   Boolean @default(false)
}

model Address {
  id        Int      @id @default(autoincrement())
  userId    Int?
  user      User?    @relation(fields: [userId], references: [id])
  street    String
  city      String
  state     String
  zip       String
  country   String
  order     Order[]
}

model Order {
  id                Int      @id @default(autoincrement())
  userId            Int?
  user              User?    @relation(fields: [userId], references: [id])
  status            OrderStatus @default(PENDING_PAYMENT)
  paymentMethod     PaymentMethod
  total             Float
  createdAt         DateTime @default(now())
  updatedAt         DateTime @updatedAt
  shippingAddressId Int?
  shippingAddress   Address? @relation(fields: [shippingAddressId], references: [id])
  proofOfPayment    String?
  deliveryDetails   String?
  guestName         String?
  guestEmail        String?
  guestPhone        String?
  estimatedDelivery String?
  items             OrderItem[]
}

model OrderItem {
  id        Int      @id @default(autoincrement())
  orderId   Int
  order     Order    @relation(fields: [orderId], references: [id])
  productId String
  name      String
  price     Float
  quantity  Int
  color     String?
}

enum OrderStatus {
  PENDING_PAYMENT
  PENDING_APPROVAL
  APPROVED
  SHIPPED
  DELIVERED
  CANCELED
}

enum PaymentMethod {
  BANK_TRANSFER
  CASH_ON_DELIVERY
}